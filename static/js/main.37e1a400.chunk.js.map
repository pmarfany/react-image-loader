{"version":3,"sources":["assets/picture.svg","assets/add.svg","assets/edit.svg","assets/close.svg","Theme/Theme.ts","Redux/types.ts","Redux/reducer.ts","Redux/store.ts","Components/RoundButton/BaseButton.tsx","Components/RoundButton/GrayButton.ts","Components/RoundButton/AccentButton.ts","Components/ImagePicker/StyledPicker.ts","Utils/isNullOrUndefined.ts","Components/ImagePicker/BaseImagePicker.tsx","Utils/readImageAsBlob.ts","Components/ImagePicker/index.tsx","Redux/actions.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Colors","theme","colors","SET_IMAGE_DATA","reducer","state","arguments","length","undefined","initialStore","action","type","Object","objectSpread","payload","image","BaseButton","_ref","onClick","className","children","react","defaultProps","round","styled","_templateObject","props","GrayButton","withConfig","displayName","componentId","blackAlpha3","_ref2","white","_ref3","blackAlpha2","AccentButton","accent","accentLight","BeforeIcon","icon","size","css","StyledPicker_templateObject","StyledPicker","black","defaultBackground","gray","edit","add","close","isNullOrUndefined","object","handleDragStart","e","preventDefault","dataTransfer","dropEffect","BaseImagePicker","inputRef","React","useRef","onDrop","entry","onLoadImage","files","react_default","a","createElement","ImagePicker_StyledPicker","onDragEnter","onDragOver","RoundButton_GrayButton","removeImage","RoundButton_AccentButton","current","click","accept","onChange","ref","readImageAsBlob","f","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","mapDispatchToProps","setImageData","connect","ImagePicker_BaseImagePicker","startsWith","then","ReactDOM","render","styled_components_browser_esm","es","store","createReduxStore","composeWithDevTools","Components_ImagePicker","document","getElementById"],"mappings":"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","file":"static/js/main.37e1a400.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picture.71882ff7.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.86f49010.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.ecce6c6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.fd8612a0.svg\";","enum Colors {\n  black = '#000000',\n  blackAlpha3 = 'rgba(0, 0, 0, 0.3)',\n  blackAlpha2 = 'rgba(0, 0, 0, 0.2)',\n  accent = '#2a5298',\n  accentLight = '#5372ab',\n  gray = '#f9f9f9',\n  white = '#ffffff'\n}\n\ninterface Theme {\n  colors: { [T in keyof typeof Colors]: typeof Colors[T] }\n}\n\nconst theme: Theme = {\n  colors: Colors,\n};\n\nexport default theme;","// Action types\nimport {Action} from \"redux\";\n\nexport const SET_IMAGE_DATA: string = 'image/SET_DATA';\n\n// Generic types\ntype StoreActionTypes = typeof SET_IMAGE_DATA;\n\n// Store action type\nexport interface StoreAction extends Action<StoreActionTypes> {\n  payload: Partial<Store>;\n}\n\n// Main store interface\nexport interface Store {\n  image: string | undefined;\n}\n","import {SET_IMAGE_DATA, Store, StoreAction} from \"./types\";\nimport {initialStore} from \"./store\";\n\nconst reducer = (state: Store = initialStore, action: StoreAction): Store => {\n  if ( action.type === SET_IMAGE_DATA ) { return { ...state, ...action.payload }; }\n  return state;\n};\n\nexport default reducer;","import {createStore as createReduxStore, Store as ReduxStore} from \"redux\";\nimport {Store, StoreAction} from \"./types\";\nimport reducer from \"./reducer\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\n// InitialStore\nconst initialStore: Store = { image: undefined };\n\n// Create store for app\nconst createStore = (): ReduxStore<Store, StoreAction> => (\n  createReduxStore(reducer, composeWithDevTools())\n);\n\nexport { initialStore, createStore };","import * as React from \"react\";\nimport {SyntheticEvent} from \"react\";\nimport styled from \"styled-components\";\n\nexport interface IButton {\n  onClick?: (e: SyntheticEvent<HTMLSpanElement>) => void;\n  className?: string;\n  round?: boolean;\n}\n\nconst BaseButton: React.FunctionComponent<IButton> = ({ onClick, className, children }) => (\n  <span className={className} onClick={onClick}>\n    {children}\n  </span>\n);\n\nBaseButton.defaultProps = {\n  round: false,\n};\n\nexport default styled(BaseButton)`\n  display: block;\n  cursor: pointer;\n  border-radius: ${(props) => props.round ? '50%' : '0%'};\n`;\n","import styled from \"styled-components/macro\";\nimport BaseButton from \"./BaseButton\";\n\nconst GrayButton = styled(BaseButton)`\n  background-color: ${({theme}) => theme.colors.blackAlpha3};\n  color: ${({theme}) => theme.colors.white};\n  \n  :hover {\n    background-color: ${({theme}) => theme.colors.blackAlpha2};\n  }\n`;\n\nexport default GrayButton;\n","import styled from \"styled-components/macro\";\nimport BaseButton from \"./BaseButton\";\n\nconst AccentButton = styled(BaseButton)`\n  background-color: ${({theme}) => theme.colors.accent};\n  color: ${({theme}) => theme.colors.white};\n  \n  :hover {\n    background-color: ${({theme}) => theme.colors.accentLight};\n  }\n`;\n\nexport default AccentButton;\n","import styled, {css} from \"styled-components/macro\";\nimport AccentButton from \"../RoundButton/AccentButton\";\nimport GrayButton from \"../RoundButton/GrayButton\";\nimport defaultBackground from '../../assets/picture.svg';\nimport add from '../../assets/add.svg';\nimport edit from '../../assets/edit.svg';\nimport close from '../../assets/close.svg';\nimport {Store} from \"../../Redux/types\";\n\nconst BeforeIcon = (icon: string, size: string) => css`\n  &:before {\n    content: '';\n    position: absolute;\n    background: url(${icon}) no-repeat center center;\n    background-size: ${size};\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`;\n\nconst StyledPicker = styled('div')<Store>`\n  position: relative;\n\twidth: 300px;\n\theight: 300px;\n\tborder: 1px solid ${({theme}) => theme.colors.black};\n\n\tbackground:\n\t  url(${(props) => props.image ? props.image : defaultBackground})\n    no-repeat\n    center center;\n  background-size: contain;\n  background-color: ${({theme}) => theme.colors.gray};\n  \n  ${AccentButton} {\n    position: absolute;\n\t\tbottom: -22px;\n\t\tright: 15px;\n\t\twidth: 45px;\n\t\theight: 45px;\n\t\t\n\t\tbox-shadow: 0 0.2em 0.4em rgba(0,0,0,0.4);\n\t\t\n\t\t${(props) => BeforeIcon(props.image ? edit : add, '1rem')}\n  }\n  \n  ${GrayButton} {\n    position: absolute;\n\t\ttop: 5px;\n\t\tright: 5px;\n\t\twidth: 35px;\n\t\theight: 35px;\n\t\t\n\t\t${BeforeIcon(close, '0.85rem')}\n  }\n  \n  input[type=\"file\"] { display: none; }\n`;\n\nexport default StyledPicker;\n","function isNullOrUndefined(object: any): object is null | undefined {\n  return typeof object === 'undefined' || object === null;\n}\n\nexport default isNullOrUndefined;\n","import React, {SyntheticEvent} from \"react\";\nimport GrayButton from \"../RoundButton/GrayButton\";\nimport AccentButton from \"../RoundButton/AccentButton\";\nimport StyledPicker from \"./StyledPicker\";\nimport isNullOrUndefined from \"../../Utils/isNullOrUndefined\";\nimport {Store} from \"../../Redux/types\";\n\ninterface IImagePicker extends Store {\n  accept: string;\n  onLoadImage: (files: FileList | null) => void;\n  removeImage: (e: SyntheticEvent<HTMLSpanElement>) => void;\n}\n\nconst handleDragStart = (e: React.DragEvent<HTMLDivElement>) => {\n  e.preventDefault();\n  e.dataTransfer.dropEffect = 'copy';\n};\n\nconst BaseImagePicker: React.FunctionComponent<IImagePicker> = (props) => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const onDrop = (entry: 'dataTransfer' | 'target') => (e: any) => {\n    e.preventDefault();\n    props.onLoadImage(e[entry].files);\n  };\n\n  const openPicker = () => {\n    if ( inputRef.current === null ) { return }\n    inputRef.current.click();\n  };\n\n  return (\n    <StyledPicker\n      image={props.image}\n      onDragEnter={handleDragStart}\n      onDragOver={handleDragStart}\n      onDrop={onDrop('dataTransfer')}\n    >\n      { !isNullOrUndefined(props.image) &&\n        <GrayButton round onClick={props.removeImage} />\n      }\n      <AccentButton round onClick={openPicker} />\n      <input type=\"file\" accept={props.accept} onChange={onDrop('target')} ref={inputRef}/>\n    </StyledPicker>\n  );\n};\n\nexport default BaseImagePicker;\n","function readImageAsBlob(f: File) {\n  return new Promise<string>((resolve, reject) => {\n    const reader: FileReader = new FileReader();\n    reader.onload = () => resolve(reader.result as string);\n    reader.onerror = reject;\n    reader.readAsDataURL(f);\n  });\n}\n\nexport default readImageAsBlob;\n","import React from \"react\";\nimport BaseImagePicker from \"./BaseImagePicker\";\nimport readImageAsBlob from \"../../Utils/readImageAsBlob\";\nimport {connect} from \"react-redux\";\nimport {Store} from \"../../Redux/types\";\nimport {setImageData} from \"../../Redux/actions\";\n\ninterface DispatchProps {\n  setImageData: (image: string | undefined) => void;\n}\n\nconst ImagePicker: React.FunctionComponent<Store & DispatchProps> = (props) => {\n  const onLoadImage = (files: FileList | null) => {\n    if ( files === null || files.length < 1 ) { return; }\n    if ( !files[0].type.startsWith('image/') ) { return; }\n\n    readImageAsBlob(files[0]).then(props.setImageData);\n  };\n\n  return (\n    <BaseImagePicker\n      image={props.image}\n      onLoadImage={onLoadImage}\n      removeImage={() => props.setImageData(undefined)}\n      accept=\"image/*\"\n    />\n  );\n};\n\nconst mapStateToProps = (state: Store) => ({ image: state.image });\nconst mapDispatchToProps = { setImageData };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePicker);\n","import {StoreAction, SET_IMAGE_DATA} from \"./types\";\n\nexport function setImageData(image: string | undefined): StoreAction {\n  return {\n    type: SET_IMAGE_DATA,\n    payload: { image },\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ThemeProvider} from \"styled-components\";\nimport theme from \"./Theme/Theme\";\nimport './index.css';\n\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"./Redux/store\";\nimport ImagePicker from \"./Components/ImagePicker\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={createStore()}>\n      <ImagePicker />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}